trigger:
- main
 
pool:
  vmImage: 'windows-latest'
 
variables:
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - group: AzureCredentialsGroup  # Grupo de variáveis seguras
 
steps:
# Etapa 1: Instala o SDK do .NET 8.x
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet
 
# Etapa 2: Restaura os pacotes NuGet para o projeto
- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'  # Restaura todos os arquivos .sln
 
# Etapa 3: Compila o projeto usando o Visual Studio Build
- task: VSBuild@1
  inputs:
    solution: '**/*.sln'  # Compila todos os arquivos .sln
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
 
# Etapa 4: Publica o projeto e gera um arquivo ZIP para o deploy
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true  # Gera um arquivo ZIP após a publicação

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Vitoria Camargo(1)(4607ce1f-3a72-47d9-a4c0-63a9a60e8f18)'
    appName: 'fiaptestegs'
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'